<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>golang on PheonixHkbxoic | docs</title>
    <link>https://PheonixHkbxoic.github.io/en/tags/golang/</link>
    <description>Recent content in golang on PheonixHkbxoic | docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 03 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://PheonixHkbxoic.github.io/en/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go: Array</title>
      <link>https://PheonixHkbxoic.github.io/en/posts/golang/array/</link>
      <pubDate>Wed, 03 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://PheonixHkbxoic.github.io/en/posts/golang/array/</guid>
      <description>数组是内存中一片连续的区域，固定长度，元素类型相同，是值类型，大数组值参等值传递效率低 编译时进行类型检查 ，索引越界检查</description>
    </item>
    
    <item>
      <title>Go: Map</title>
      <link>https://PheonixHkbxoic.github.io/en/posts/golang/map/</link>
      <pubDate>Wed, 03 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://PheonixHkbxoic.github.io/en/posts/golang/map/</guid>
      <description>Map 一、声明与赋值 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // 声明 指明key，value的类型 var a map[string]string // 赋值 a = map[string]string{} // 声明并赋值 var b map[string]string = map[string]string{} var c = map[string]string{ &amp;#34;a&amp;#34; : &amp;#34;a&amp;#34;, &amp;#34;b&amp;#34; : &amp;#34;b&amp;#34;,</description>
    </item>
    
    <item>
      <title>Go: Slice</title>
      <link>https://PheonixHkbxoic.github.io/en/posts/golang/slice/</link>
      <pubDate>Wed, 03 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://PheonixHkbxoic.github.io/en/posts/golang/slice/</guid>
      <description>切片是不定长的特定元素类型的序列,可以理解为动态数组,切片本身不能存储任何数据，都是底层数组存储数据，修改切片的时候修改的是底层数组中的数据,底层实现是一个结构体，包括长度、容量和一个指向实际数组的unsafe.Pointer指针</description>
    </item>
    
    <item>
      <title>Go: range</title>
      <link>https://PheonixHkbxoic.github.io/en/posts/golang/range/</link>
      <pubDate>Tue, 02 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://PheonixHkbxoic.github.io/en/posts/golang/range/</guid>
      <description>迭代数组、切片、映射、字符串和通道,i,v是值传递，修改v数组元素不变， 数组与切片循环前次数已确定，遍历通道直到关闭, 没有数据则会阻塞</description>
    </item>
    
    <item>
      <title>Go: Channel</title>
      <link>https://PheonixHkbxoic.github.io/en/posts/golang/channel/</link>
      <pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://PheonixHkbxoic.github.io/en/posts/golang/channel/</guid>
      <description>Channel 在Go语言中，channel是一种特殊的类型，用于在并发编程中实现不同的goroutine之间的通信和同步。本文将深入探讨golang的c</description>
    </item>
    
    <item>
      <title>Go: string</title>
      <link>https://PheonixHkbxoic.github.io/en/posts/golang/string/</link>
      <pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://PheonixHkbxoic.github.io/en/posts/golang/string/</guid>
      <description>字符串是不可变的,字符串的赋值并不是拷贝底层的字符串数组，而是数组指针和长度字段的拷贝,重新赋值 不会改变原来变量的地址</description>
    </item>
    
    <item>
      <title>Go: variable</title>
      <link>https://PheonixHkbxoic.github.io/en/posts/golang/variable/</link>
      <pubDate>Wed, 20 Dec 2023 22:15:37 +0000</pubDate>
      
      <guid>https://PheonixHkbxoic.github.io/en/posts/golang/variable/</guid>
      <description>一、变量声明与赋值 Go 中命名规则是，名称以字母或下划线开头，后面可跟任意数量的字符、数字和下划线，字符区分大小写，名称本身没有长度限制，但是 Go</description>
    </item>
    
  </channel>
</rss>
